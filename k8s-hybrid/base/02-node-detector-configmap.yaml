# k8s-hybrid/base/02-node-detector-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-detector
  namespace: ai-assistant
data:
  detect-nodes.sh: |
    #!/bin/bash
    
    # Detect GPU and CPU nodes
    GPU_NODES=""
    CPU_NODES=""
    
    # Get all nodes
    for node in $(kubectl get nodes -o name | cut -d/ -f2); do
      # Check if node has GPU
      gpu_count=$(kubectl get node $node -o jsonpath='{.status.capacity.nvidia\.com/gpu}' 2>/dev/null)
      
      if [ ! -z "$gpu_count" ] && [ "$gpu_count" -gt 0 ]; then
        GPU_NODES="$GPU_NODES $node"
        kubectl label node $node ai-assistant/node-type=gpu --overwrite
        kubectl label node $node ai-assistant/gpu-available=true --overwrite
      else
        CPU_NODES="$CPU_NODES $node"
        kubectl label node $node ai-assistant/node-type=cpu --overwrite
        kubectl label node $node ai-assistant/gpu-available=false --overwrite
      fi
    done
    
    echo "GPU Nodes: $GPU_NODES"
    echo "CPU Nodes: $CPU_NODES"
    
    # Update ConfigMap with node information
    kubectl create configmap node-info \
      --from-literal=gpu-nodes="$GPU_NODES" \
      --from-literal=cpu-nodes="$CPU_NODES" \
      --from-literal=gpu-count="$(echo $GPU_NODES | wc -w)" \
      --from-literal=cpu-count="$(echo $CPU_NODES | wc -w)" \
      -n ai-assistant \
      --dry-run=client -o yaml | kubectl apply -f -